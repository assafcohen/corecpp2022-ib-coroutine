# clang-tidy 14.0.0

################################################################################
##  Project ib_win_core                                                       ##
##  Copyright 2021 Incredibuild Software Ltd.                                 ##
##  All rights reserved                                                       ##
################################################################################

## Enforced Checks
FormatStyle: webkit
Checks: '
        -*,
        bugprone-argument-comment,
        bugprone-assert-side-effect,
        bugprone-bad-signal-to-kill-thread,
        bugprone-branch-clone,
        bugprone-copy-constructor-init,
        bugprone-dangling-handle,
        bugprone-dynamic-static-initializers,
        bugprone-easily-swappable-parameters,
        bugprone-exception-escape,
        bugprone-fold-init-type,
        bugprone-forward-declaration-namespace,
        bugprone-forwarding-reference-overload,
        bugprone-inaccurate-erase,
        bugprone-incorrect-roundings,
        bugprone-infinite-loop,
        bugprone-integer-division,
        bugprone-lambda-function-name,
        bugprone-macro-parentheses,
        bugprone-macro-repeated-side-effects,
        bugprone-misplaced-operator-in-strlen-in-alloc,
        bugprone-misplaced-pointer-arithmetic-in-alloc,
        bugprone-misplaced-widening-cast,
        bugprone-move-forwarding-reference,
        bugprone-multiple-statement-macro,
        bugprone-narrowing-conversions,
        bugprone-no-escape,
        bugprone-not-null-terminated-result,
        bugprone-parent-virtual-call,
        bugprone-posix-return,
        bugprone-redundant-branch-condition,
        bugprone-reserved-identifier,
        bugprone-signal-handler,
        bugprone-signed-char-misuse,
        bugprone-sizeof-container,
        bugprone-sizeof-expression,
        bugprone-spuriously-wake-up-functions,
        bugprone-string-constructor,
        bugprone-string-integer-assignment,
        bugprone-string-literal-with-embedded-nul,
        bugprone-suspicious-enum-usage,
        bugprone-suspicious-include,
        bugprone-suspicious-memory-comparison,
        bugprone-suspicious-memset-usage,
        bugprone-suspicious-missing-comma,
        bugprone-suspicious-semicolon,
        bugprone-suspicious-string-compare,
        bugprone-swapped-arguments,
        bugprone-terminating-continue,
        bugprone-throw-keyword-missing,
        bugprone-too-small-loop-variable,
        bugprone-undefined-memory-manipulation,
        bugprone-undelegated-constructor,
        bugprone-unhandled-self-assignment,
        bugprone-unused-raii,
        bugprone-unused-return-value,
        bugprone-use-after-move,
        bugprone-virtual-near-miss,
        cert-dcl21-cpp,
        cert-dcl58-cpp,
        cert-err34-c,
        cert-err52-cpp,
        cert-err58-cpp,
        cert-err60-cpp,
        cert-flp30-c,
        cert-msc50-cpp,
        cert-msc51-cpp,
        cert-str34-c,
        clion-simplify,
        clion-virtual-call-in-ctor-or-dtor,
        cppcoreguidelines-avoid-goto,
        cppcoreguidelines-avoid-magic-numbers,
        cppcoreguidelines-avoid-non-const-global-variables,
        cppcoreguidelines-c-copy-assignment-signature,
        cppcoreguidelines-explicit-virtual-functions,
        cppcoreguidelines-init-variables,
        cppcoreguidelines-interfaces-global-init,
        cppcoreguidelines-macro-usage,
        cppcoreguidelines-narrowing-conversions,
        cppcoreguidelines-no-malloc,
        cppcoreguidelines-non-private-member-variables-in-classes,
        cppcoreguidelines-prefer-member-initializer,
        cppcoreguidelines-pro-bounds-array-to-pointer-decay,
        cppcoreguidelines-pro-bounds-constant-array-index,
        cppcoreguidelines-pro-bounds-pointer-arithmetic,
        cppcoreguidelines-pro-type-const-cast,
        cppcoreguidelines-pro-type-cstyle-cast,
        cppcoreguidelines-pro-type-member-init,
        cppcoreguidelines-pro-type-reinterpret-cast,
        cppcoreguidelines-pro-type-static-cast-downcast,
        cppcoreguidelines-pro-type-union-access,
        cppcoreguidelines-pro-type-vararg,
        cppcoreguidelines-slicing,
        cppcoreguidelines-special-member-functions,
        cppcoreguidelines-virtual-class-destructor,
        google-default-arguments,
        google-explicit-constructor,
        google-runtime-operator,
        google-runtime-int,
        hicpp-exception-baseclass,
        hicpp-multiway-paths-covered,
        misc-misplaced-const,
        misc-new-delete-overloads,
        misc-no-recursion,
        misc-non-copyable-objects,
        misc-throw-by-value-catch-by-reference,
        misc-unconventional-assign-operator,
        misc-uniqueptr-reset-release,
        modernize-avoid-bind,
        modernize-concat-nested-namespaces,
        modernize-deprecated-headers,
        modernize-deprecated-ios-base-aliases,
        modernize-loop-convert,
        modernize-make-shared,
        modernize-make-unique,
        modernize-pass-by-value,
        modernize-raw-string-literal,
        modernize-redundant-void-arg,
        modernize-replace-auto-ptr,
        modernize-replace-disallow-copy-and-assign-macro,
        modernize-replace-random-shuffle,
        modernize-return-braced-init-list,
        modernize-shrink-to-fit,
        modernize-unary-static-assert,
        modernize-use-auto,
        modernize-use-bool-literals,
        modernize-use-default-member-init,
        modernize-use-emplace,
        modernize-use-equals-default,
        modernize-use-equals-delete,
        modernize-use-nodiscard,
        modernize-use-noexcept,
        modernize-use-nullptr,
        modernize-use-override,
        modernize-use-transparent-functors,
        modernize-use-uncaught-exceptions,
        modernize-use-using,
        mpi-buffer-deref,
        mpi-type-mismatch,
        openmp-use-default-none,
        performance-faster-string-find,
        performance-for-range-copy,
        performance-implicit-conversion-in-loop,
        performance-inefficient-algorithm,
        performance-inefficient-string-concatenation,
        performance-inefficient-vector-operation,
        performance-move-const-arg,
        performance-move-constructor-init,
        performance-no-automatic-move,
        performance-noexcept-move-constructor,
        performance-trivially-destructible,
        performance-type-promotion-in-math-fn,
        performance-unnecessary-copy-initialization,
        performance-unnecessary-value-param,
        portability-restrict-system-includes,
        portability-simd-intrinsics,
        readability-avoid-const-params-in-decls,
        readability-braces-around-statements,
        readability-const-return-type,
        readability-container-data-pointer,
        readability-container-size-empty,
        readability-convert-member-functions-to-static,
        readability-delete-null-pointer,
        readability-deleted-default,
        readability-identifier-naming,
        readability-inconsistent-declaration-parameter-name,
        readability-make-member-function-const,
        readability-misleading-indentation,
        readability-misplaced-array-index,
        readability-non-const-parameter,
        readability-redundant-control-flow,
        readability-redundant-declaration,
        readability-redundant-function-ptr-dereference,
        readability-redundant-smartptr-get,
        readability-redundant-string-cstr,
        readability-redundant-string-init,
        readability-simplify-subscript-expr,
        readability-static-accessed-through-instance,
        readability-static-definition-in-anonymous-namespace,
        readability-string-compare,
        readability-uniqueptr-delete-release
        '
CheckOptions:
  - key: google-runtime-int.UnsignedTypePrefix
    value: 'std::uint'
  - key: google-runtime-int.SignedTypePrefix
    value: 'std::int'
  - key: google-runtime-int.TypeSuffix
    value: '_t'
  - key: readability-identifier-naming.AbstractClassCase
    value: 'CamelCase'
  - key: readability-identifier-naming.AbstractClassPrefix
    value: 'I'
  - key: readability-identifier-naming.AggressiveDependentMemberLookup
    value: On
  - key: readability-identifier-naming.ClassCase
    value: 'CamelCase'
  - key: readability-identifier-naming.ClassConstantCase
    value: 'camelBack'
  - key: readability-identifier-naming.ClassMemberCase
    value: 'CamelCase'
  - key: readability-identifier-naming.ClassMemberPrefix
    value: 's'
  - key: readability-identifier-naming.ClassMethodCase
    value: 'camelBack'
  - key: readability-identifier-naming.ConstantCase
    value: 'camelBack'
  - key: readability-identifier-naming.ConstantMemberCase
    value: 'CamelCase'
  - key: readability-identifier-naming.ConstantMemberPrefix
    value: 'c'
  - key: readability-identifier-naming.ConstantParameterCase
    value: 'camelBack'
  - key: readability-identifier-naming.ConstantPointerParameterCase
    value: 'camelBack'
  - key: readability-identifier-naming.ConstexprFunctionCase
    value: 'camelBack'
  - key: readability-identifier-naming.ConstexprMethodCase
    value: 'camelBack'
  - key: readability-identifier-naming.ConstexprVariableCase
    value: 'camelBack'
  - key: readability-identifier-naming.EnumCase
    value: 'CamelCase'
  - key: readability-identifier-naming.EnumConstantCase
    value: 'camelBack'
  - key: readability-identifier-naming.FunctionCase
    value: 'camelBack'
  - key: readability-identifier-naming.GlobalConstantCase
    value: 'camelBack'
  - key: readability-identifier-naming.GlobalConstantPointerCase
    value: 'camelBack'
  - key: readability-identifier-naming.GlobalFunctionCase
    value: 'camelBack'
  - key: readability-identifier-naming.GlobalPointerCase
    value: 'camelBack'
  - key: readability-identifier-naming.GlobalVariableCase
    value: 'camelBack'
  - key: readability-identifier-naming.InlineNamespaceCase
    value: 'lower_case'
  - key: readability-identifier-naming.LocalConstantCase
    value: 'camelBack'
  - key: readability-identifier-naming.LocalConstantPointerCase
    value: 'camelBack'
  - key: readability-identifier-naming.LocalPointerCase
    value: 'camelBack'
  - key: readability-identifier-naming.LocalVariableCase
    value: 'camelBack'
  - key: readability-identifier-naming.MacroDefinitionCase
    value: 'UPPER_CASE'
  - key: readability-identifier-naming.MemberCase
    value: 'camelBack'
  - key: readability-identifier-naming.MethodCase
    value: 'camelBack'
  - key: readability-identifier-naming.NamespaceCase
    value: 'lower_case'
  - key: readability-identifier-naming.ParameterCase
    value: 'camelBack'
  - key: readability-identifier-naming.ParameterPackCase
    value: 'camelBack'
  - key: readability-identifier-naming.PointerParameterCase
    value: 'camelBack'
  - key: readability-identifier-naming.PrivateMemberCase
    value: 'CamelCase'
  - key: readability-identifier-naming.PrivateMemberPrefix
    value: 'm'
  - key: readability-identifier-naming.PrivateMethodCase
    value: 'camelBack'
  - key: readability-identifier-naming.ProtectedMemberCase
    value: 'CamelCase'
  - key: readability-identifier-naming.ProtectedMemberPrefix
    value: 'm'
  - key: readability-identifier-naming.ProtectedMethodCase
    value: 'camelBack'
  - key: readability-identifier-naming.PublicMemberCase
    value: 'camelBack'
  - key: readability-identifier-naming.PublicMethodCase
    value: 'camelBack'
  - key: readability-identifier-naming.ScopedEnumConstantCase
    value: 'camelBack'
  - key: readability-identifier-naming.StaticConstantCase
    value: 'camelBack'
  - key: readability-identifier-naming.StaticVariableCase
    value: 'camelBack'
  - key: readability-identifier-naming.StructCase
    value: 'CamelCase'
  # Buggy on clang 14 with Windows
  #  - key: readability-identifier-naming.TemplateParameterCase
  #    value: 'CamelCase'
  #  - key: readability-identifier-naming.TemplateParameterPrefix
  #    value: 'T'
  #  - key: readability-identifier-naming.TypeTemplateParameterCase
  #    value: 'CamelCase'
  - key: readability-identifier-naming.TemplateTemplateParameterCase
    value: 'CamelCase'
  - key: readability-identifier-naming.TemplateTemplateParameterPrefix
    value: 'T'
  - key: readability-identifier-naming.ValueTemplateParameterCase
    value: 'camelBack'
  - key: readability-identifier-naming.TypeAliasCase
    value: 'CamelCase'
  - key: readability-identifier-naming.TypedefCase
    value: 'CamelCase'
  - key: readability-identifier-naming.UnionCase
    value: 'CamelCase'
  - key: readability-identifier-naming.VariableCase
    value: 'camelBack'
  - key: readability-identifier-naming.VirtualMethodCase
    value: 'camelBack'

WarningsAsErrors: '*'

## Unenforced Checks
#abseil-duration-addition,
#abseil-duration-comparison,
#abseil-duration-conversion-cast,
#abseil-duration-division,
#abseil-duration-factory-float,
#abseil-duration-factory-scale,
#abseil-duration-subtraction,
#abseil-duration-unnecessary-conversion,
#abseil-faster-strsplit-delimiter,
#abseil-no-internal-dependencies,
#abseil-no-namespace,
#abseil-redundant-strcat-calls,
#abseil-str-cat-append,
#abseil-string-find-startswith,
#abseil-string-find-str-contains,
#abseil-time-comparison,
#abseil-time-subtraction,
#abseil-upgrade-duration-conversions,
#altera-id-dependent-backward-branch,
#altera-kernel-name-restriction,
#altera-single-work-item-barrier,
#altera-struct-pack-align,
#altera-unroll-loops,
#android-cloexec-accept,
#android-cloexec-accept4,
#android-cloexec-creat,
#android-cloexec-dup,
#android-cloexec-epoll-create,
#android-cloexec-epoll-create1,
#android-cloexec-fopen,
#android-cloexec-inotify-init,
#android-cloexec-inotify-init1,
#android-cloexec-memfd-create,
#android-cloexec-open,
#android-cloexec-pipe,
#android-cloexec-pipe2,
#android-cloexec-socket,
#android-comparison-in-temp-failure-retry,
#boost-use-to-string,
#bugprone-bool-pointer-implicit-conversion,
#bugprone-implicit-widening-of-multiplication-result,
#bugprone-unhandled-exception-at-new,
#cert-con36-c,
#cert-con54-cpp,
#cert-dcl03-c,
#cert-dcl16-c,
#cert-dcl37-c,
#cert-dcl50-cpp,
#cert-dcl51-cpp,
#cert-dcl54-cpp,
#cert-dcl59-cpp,
#cert-env33-c,
#cert-err09-cpp,
#cert-err61-cpp,
#cert-exp42-c,
#cert-fio38-c,
#cert-flp37-c,
#cert-mem57-cpp,
#cert-msc30-c,
#cert-msc32-c,
#cert-oop11-cpp,
#cert-oop54-cpp,
#cert-oop57-cpp,
#cert-oop58-cpp,
#cert-pos44-c,
#cert-pos47-c,
#cert-sig30-c,
#clang-analyzer-apiModeling.google.GTest,
#clang-analyzer-apiModeling.llvm.CastValue,
#clang-analyzer-apiModeling.llvm.ReturnValue,
#clang-analyzer-apiModeling.StdCLibraryFunctions,
#clang-analyzer-apiModeling.TrustNonnull,
#clang-analyzer-core.builtin.BuiltinFunctions,
#clang-analyzer-core.builtin.NoReturnFunctions,
#clang-analyzer-core.CallAndMessage,
#clang-analyzer-core.CallAndMessageModeling,
#clang-analyzer-core.DivideZero,
#clang-analyzer-core.DynamicTypePropagation,
#clang-analyzer-core.NonnilStringConstants,
#clang-analyzer-core.NonNullParamChecker,
#clang-analyzer-core.NullDereference,
#clang-analyzer-core.StackAddrEscapeBase,
#clang-analyzer-core.StackAddressEscape,
#clang-analyzer-core.UndefinedBinaryOperatorResult,
#clang-analyzer-core.uninitialized.ArraySubscript,
#clang-analyzer-core.uninitialized.Assign,
#clang-analyzer-core.uninitialized.Branch,
#clang-analyzer-core.uninitialized.CapturedBlockVariable,
#clang-analyzer-core.uninitialized.UndefReturn,
#clang-analyzer-core.VLASize,
#clang-analyzer-cplusplus.InnerPointer,
#clang-analyzer-cplusplus.Move,
#clang-analyzer-cplusplus.NewDelete,
#clang-analyzer-cplusplus.NewDeleteLeaks,
#clang-analyzer-cplusplus.PlacementNew,
#clang-analyzer-cplusplus.PureVirtualCall,
#clang-analyzer-cplusplus.SelfAssignment,
#clang-analyzer-cplusplus.SmartPtrModeling,
#clang-analyzer-cplusplus.VirtualCallModeling,
#clang-analyzer-deadcode.DeadStores,
#clang-analyzer-fuchsia.HandleChecker,
#clang-analyzer-nullability.NullabilityBase,
#clang-analyzer-nullability.NullableDereferenced,
#clang-analyzer-nullability.NullablePassedToNonnull,
#clang-analyzer-nullability.NullableReturnedFromNonnull,
#clang-analyzer-nullability.NullPassedToNonnull,
#clang-analyzer-nullability.NullReturnedFromNonnull,
#clang-analyzer-optin.cplusplus.UninitializedObject,
#clang-analyzer-optin.cplusplus.VirtualCall,
#clang-analyzer-optin.mpi.MPI-Checker,
#clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker,
#clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker,
#clang-analyzer-optin.osx.OSObjectCStyleCast,
#clang-analyzer-optin.performance.GCDAntipattern,
#clang-analyzer-optin.performance.Padding,
#clang-analyzer-optin.portability.UnixAPI,
#clang-analyzer-osx.API,
#clang-analyzer-osx.cocoa.AtSync,
#clang-analyzer-osx.cocoa.AutoreleaseWrite,
#clang-analyzer-osx.cocoa.ClassRelease,
#clang-analyzer-osx.cocoa.Dealloc,
#clang-analyzer-osx.cocoa.IncompatibleMethodTypes,
#clang-analyzer-osx.cocoa.Loops,
#clang-analyzer-osx.cocoa.MissingSuperCall,
#clang-analyzer-osx.cocoa.NilArg,
#clang-analyzer-osx.cocoa.NonNilReturnValue,
#clang-analyzer-osx.cocoa.NSAutoreleasePool,
#clang-analyzer-osx.cocoa.NSError,
#clang-analyzer-osx.cocoa.ObjCGenerics,
#clang-analyzer-osx.cocoa.RetainCount,
#clang-analyzer-osx.cocoa.RetainCountBase,
#clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak,
#clang-analyzer-osx.cocoa.SelfInit,
#clang-analyzer-osx.cocoa.SuperDealloc,
#clang-analyzer-osx.cocoa.UnusedIvars,
#clang-analyzer-osx.cocoa.VariadicMethodTypes,
#clang-analyzer-osx.coreFoundation.CFError,
#clang-analyzer-osx.coreFoundation.CFNumber,
#clang-analyzer-osx.coreFoundation.CFRetainRelease,
#clang-analyzer-osx.coreFoundation.containers.OutOfBounds,
#clang-analyzer-osx.coreFoundation.containers.PointerSizedValues,
#clang-analyzer-osx.MIG,
#clang-analyzer-osx.NSOrCFErrorDerefChecker,
#clang-analyzer-osx.NumberObjectConversion,
#clang-analyzer-osx.ObjCProperty,
#clang-analyzer-osx.OSObjectRetainCount,
#clang-analyzer-osx.SecKeychainAPI,
#clang-analyzer-security.FloatLoopCounter,
#clang-analyzer-security.insecureAPI.bcmp,
#clang-analyzer-security.insecureAPI.bcopy,
#clang-analyzer-security.insecureAPI.bzero,
#clang-analyzer-security.insecureAPI.decodeValueOfObjCType,
#clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,
#clang-analyzer-security.insecureAPI.getpw,
#clang-analyzer-security.insecureAPI.gets,
#clang-analyzer-security.insecureAPI.mkstemp,
#clang-analyzer-security.insecureAPI.mktemp,
#clang-analyzer-security.insecureAPI.rand,
#clang-analyzer-security.insecureAPI.SecuritySyntaxChecker,
#clang-analyzer-security.insecureAPI.strcpy,
#clang-analyzer-security.insecureAPI.UncheckedReturn,
#clang-analyzer-security.insecureAPI.vfork,
#clang-analyzer-unix.API,
#clang-analyzer-unix.cstring.BadSizeArg,
#clang-analyzer-unix.cstring.CStringModeling,
#clang-analyzer-unix.cstring.NullArg,
#clang-analyzer-unix.DynamicMemoryModeling,
#clang-analyzer-unix.Malloc,
#clang-analyzer-unix.MallocSizeof,
#clang-analyzer-unix.MismatchedDeallocator,
#clang-analyzer-unix.Vfork,
#clang-analyzer-valist.CopyToSelf,
#clang-analyzer-valist.Uninitialized,
#clang-analyzer-valist.Unterminated,
#clang-analyzer-valist.ValistBase,
#clang-analyzer-webkit.NoUncountedMemberChecker,
#clang-analyzer-webkit.RefCntblBaseVirtualDtor,
#clang-analyzer-webkit.UncountedLambdaCapturesChecker,
#clion-argument-selection-defects,
#clion-empty-decl-or-stmt,
#clion-misra-c2012-4-3,
#clion-misra-c2012-4-12,
#clion-misra-c2012-6-1,
#clion-misra-c2012-6-2,
#clion-misra-c2012-7-1,
#clion-misra-c2012-7-2,
#clion-misra-c2012-7-3,
#clion-misra-c2012-7-4,
#clion-misra-c2012-8-1,
#clion-misra-c2012-8-2,
#clion-misra-c2012-8-8,
#clion-misra-c2012-8-10,
#clion-misra-c2012-8-11,
#clion-misra-c2012-8-12,
#clion-misra-c2012-8-14,
#clion-misra-c2012-9-3,
#clion-misra-c2012-9-5,
#clion-misra-c2012-10-1,
#clion-misra-c2012-10-2,
#clion-misra-c2012-10-5,
#clion-misra-c2012-11-1,
#clion-misra-c2012-11-2,
#clion-misra-c2012-11-3,
#clion-misra-c2012-11-4,
#clion-misra-c2012-11-5,
#clion-misra-c2012-11-6,
#clion-misra-c2012-11-7,
#clion-misra-c2012-11-8,
#clion-misra-c2012-11-9,
#clion-misra-c2012-12-2,
#clion-misra-c2012-12-3,
#clion-misra-c2012-12-5,
#clion-misra-c2012-13-1,
#clion-misra-c2012-13-3,
#clion-misra-c2012-13-4,
#clion-misra-c2012-13-5,
#clion-misra-c2012-13-6,
#clion-misra-c2012-14-4,
#clion-misra-c2012-15-1,
#clion-misra-c2012-15-2,
#clion-misra-c2012-15-6,
#clion-misra-c2012-15-7,
#clion-misra-c2012-16-3,
#clion-misra-c2012-16-4,
#clion-misra-c2012-16-5,
#clion-misra-c2012-16-6,
#clion-misra-c2012-16-7,
#clion-misra-c2012-17-3,
#clion-misra-c2012-17-5,
#clion-misra-c2012-17-6,
#clion-misra-c2012-17-7,
#clion-misra-c2012-17-8,
#clion-misra-c2012-18-4,
#clion-misra-c2012-18-5,
#clion-misra-c2012-18-7,
#clion-misra-c2012-18-8,
#clion-misra-c2012-19-2,
#clion-misra-c2012-21-3,
#clion-misra-c2012-21-7,
#clion-misra-c2012-21-8,
#clion-misra-c2012-21-9,
#clion-misra-c2012-21-10,
#clion-misra-c2012-22-5,
#clion-misra-cpp2008-0-1-7,
#clion-misra-cpp2008-2-13-1,
#clion-misra-cpp2008-2-13-2,
#clion-misra-cpp2008-2-13-3,
#clion-misra-cpp2008-2-13-4,
#clion-misra-cpp2008-3-1-2,
#clion-misra-cpp2008-3-1-3,
#clion-misra-cpp2008-4-5-1,
#clion-misra-cpp2008-4-5-2,
#clion-misra-cpp2008-4-10-2,
#clion-misra-cpp2008-5-0-4,
#clion-misra-cpp2008-5-0-5,
#clion-misra-cpp2008-5-0-6,
#clion-misra-cpp2008-5-0-11,
#clion-misra-cpp2008-5-0-12,
#clion-misra-cpp2008-5-0-13,
#clion-misra-cpp2008-5-0-14,
#clion-misra-cpp2008-5-0-19,
#clion-misra-cpp2008-5-2-2,
#clion-misra-cpp2008-5-2-4,
#clion-misra-cpp2008-5-2-5,
#clion-misra-cpp2008-5-2-10,
#clion-misra-cpp2008-5-2-11,
#clion-misra-cpp2008-5-2-12,
#clion-misra-cpp2008-5-3-1,
#clion-misra-cpp2008-5-3-2,
#clion-misra-cpp2008-5-3-3,
#clion-misra-cpp2008-5-3-4,
#clion-misra-cpp2008-5-8-1,
#clion-misra-cpp2008-5-14-1,
#clion-misra-cpp2008-5-18-1,
#clion-misra-cpp2008-6-2-1,
#clion-misra-cpp2008-6-3-1,
#clion-misra-cpp2008-6-4-1,
#clion-misra-cpp2008-6-4-2,
#clion-misra-cpp2008-6-4-5,
#clion-misra-cpp2008-6-4-6,
#clion-misra-cpp2008-6-4-7,
#clion-misra-cpp2008-6-4-8,
#clion-misra-cpp2008-6-5-1,
#clion-misra-cpp2008-6-5-2,
#clion-misra-cpp2008-6-5-3,
#clion-misra-cpp2008-6-5-4,
#clion-misra-cpp2008-6-6-2,
#clion-misra-cpp2008-7-3-4,
#clion-misra-cpp2008-7-4-3,
#clion-misra-cpp2008-8-0-1,
#clion-misra-cpp2008-8-4-1,
#clion-misra-cpp2008-8-4-4,
#clion-misra-cpp2008-8-5-3,
#clion-misra-cpp2008-9-5-1,
#clion-misra-cpp2008-9-6-2,
#clion-misra-cpp2008-9-6-4,
#clion-misra-cpp2008-10-1-1,
#clion-misra-cpp2008-10-3-2,
#clion-misra-cpp2008-11-0-1,
#clion-misra-cpp2008-12-1-3,
#clion-misra-cpp2008-14-5-2,
#clion-misra-cpp2008-15-0-2,
#clion-misra-cpp2008-15-1-2,
#clion-misra-cpp2008-15-1-3,
#clion-misra-cpp2008-15-3-5,
#clion-misra-cpp2008-15-5-1,
#clion-misra-cpp2008-18-0-2,
#clion-misra-cpp2008-18-0-3,
#clion-misra-cpp2008-18-0-4,
#clion-misra-cpp2008-18-2-1,
#clion-misra-cpp2008-18-4-1,
#clion-preprocessor-comment-check,
#clion-replace-enable-if,
#clion-unconstrained-variable-type,
#concurrency-mt-unsafe,
#concurrency-thread-canceltype-asynchronous,
#cppcoreguidelines-avoid-c-arrays,
#cppcoreguidelines-owning-memory,
#darwin-avoid-spinlock,
#darwin-dispatch-once-nonstatic,
#fuchsia-default-arguments-calls,
#fuchsia-default-arguments-declarations,
#fuchsia-header-anon-namespaces,
#fuchsia-multiple-inheritance,
#fuchsia-overloaded-operator,
#fuchsia-statically-constructed-objects,
#fuchsia-trailing-return,
#fuchsia-virtual-inheritance,
#google-build-explicit-make-pair,
#google-build-namespaces,
#google-build-using-namespace,
#google-global-names-in-headers,
#google-objc-avoid-nsobject-new,
#google-objc-avoid-throwing-exception,
#google-objc-function-naming,
#google-objc-global-variable-declaration,
#google-readability-avoid-underscore-in-googletest-name,
#google-readability-braces-around-statements,
#google-readability-casting,
#google-readability-function-size,
#google-readability-namespace-comments,
#google-readability-todo,
#google-runtime-int,
#google-upgrade-googletest-case,
#hicpp-avoid-c-arrays,
#hicpp-avoid-goto,
#hicpp-braces-around-statements,
#hicpp-deprecated-headers,
#hicpp-explicit-conversions,
#hicpp-function-size,
#hicpp-invalid-access-moved,
#hicpp-member-init,
#hicpp-move-const-arg,
#hicpp-named-parameter,
#hicpp-new-delete-operators,
#hicpp-no-array-decay,
#hicpp-no-assembler,
#hicpp-no-malloc,
#hicpp-noexcept-move,
#hicpp-signed-bitwise,
#hicpp-special-member-functions,
#hicpp-static-assert,
#hicpp-undelegated-constructor,
#hicpp-uppercase-literal-suffix,
#hicpp-use-auto,
#hicpp-use-emplace,
#hicpp-use-equals-default,
#hicpp-use-equals-delete,
#hicpp-use-noexcept,
#hicpp-use-nullptr,
#hicpp-use-override,
#hicpp-vararg,
#linuxkernel-must-check-errs,
#llvm-else-after-return,
#llvm-header-guard,
#llvm-include-order,
#llvm-namespace-comment,
#llvm-prefer-isa-or-dyn-cast-in-conditionals,
#llvm-prefer-register-over-unsigned,
#llvm-qualified-auto,
#llvm-twine-local,
#llvmlibc-callee-namespace,
#llvmlibc-implementation-in-namespace,
#llvmlibc-restrict-system-libc-headers,
#misc-definitions-in-headers,
#misc-non-private-member-variables-in-classes,
#misc-redundant-expression,
#misc-static-assert,
#misc-unused-alias-decls,
#misc-unused-parameters,
#misc-unused-using-decls,
#modernize-avoid-c-arrays,
#modernize-use-trailing-return-type,
#objc-avoid-nserror-init,
#objc-dealloc-in-category,
#objc-forbidden-subclassing,
#objc-missing-hash,
#objc-nsinvocation-argument-lifetime,
#objc-property-declaration,
#objc-super-self,
#openmp-exception-escape,
#performance-no-int-to-ptr,
#readability-else-after-return,
#readability-function-cognitive-complexity,
#readability-function-size,
#readability-identifier-length,
#readability-implicit-bool-conversion,
#readability-isolate-declaration,
#readability-magic-numbers,
#readability-named-parameter,
#readability-qualified-auto,
#readability-redundant-access-specifiers,
#readability-suspicious-call-argument,
#readability-use-anyofallof,
#zircon-temporary-objects,
